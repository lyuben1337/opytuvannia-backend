// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using opytuvannia_backend.Database;

#nullable disable

namespace opytuvannia_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240504175113_AddedRespondentRewordManyToMany")]
    partial class AddedRespondentRewordManyToMany
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("opytuvannia_backend.Entities.Answer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question_id");

                    b.HasKey("Id")
                        .HasName("pk_answers");

                    b.HasIndex("QuestionId")
                        .HasDatabaseName("ix_answers_question_id");

                    b.ToTable("answers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "8066edc3-20f3-42c7-9542-3c91f0d79e1d",
                            Content = "Відповідь 95",
                            QuestionId = "44b50da0-1a6d-4df3-8538-0185c2e9e5b8"
                        },
                        new
                        {
                            Id = "d4a6abb3-c453-450d-bfad-00dcbbdd67a8",
                            Content = "Відповідь 36",
                            QuestionId = "44b50da0-1a6d-4df3-8538-0185c2e9e5b8"
                        },
                        new
                        {
                            Id = "0a0e17a6-4605-404b-9b79-6dd992959624",
                            Content = "Відповідь 39",
                            QuestionId = "44b50da0-1a6d-4df3-8538-0185c2e9e5b8"
                        },
                        new
                        {
                            Id = "033e9d93-6036-48e7-bbac-765a12439518",
                            Content = "Відповідь 9",
                            QuestionId = "44b50da0-1a6d-4df3-8538-0185c2e9e5b8"
                        },
                        new
                        {
                            Id = "f36a0a82-004c-4603-a78a-39f6a4ae49f0",
                            Content = "Відповідь 47",
                            QuestionId = "3037d92a-b64c-4727-bacb-aea136abf8e5"
                        },
                        new
                        {
                            Id = "356ce86a-3daa-4dda-a922-e878321f4a97",
                            Content = "Відповідь 80",
                            QuestionId = "3037d92a-b64c-4727-bacb-aea136abf8e5"
                        },
                        new
                        {
                            Id = "4b8f3012-e7ca-4ab4-a220-71e0832d5e0b",
                            Content = "Відповідь 33",
                            QuestionId = "3037d92a-b64c-4727-bacb-aea136abf8e5"
                        },
                        new
                        {
                            Id = "ca56748d-063f-46c8-bc5a-b91172075ecf",
                            Content = "Відповідь 90",
                            QuestionId = "3037d92a-b64c-4727-bacb-aea136abf8e5"
                        },
                        new
                        {
                            Id = "67921382-790e-49ba-875e-476e9f6e11b0",
                            Content = "Відповідь 62",
                            QuestionId = "ba93de1a-3b88-412f-bf99-25f0b05e8fba"
                        },
                        new
                        {
                            Id = "afd1399c-63d2-4b1f-a9a8-321addedc4e0",
                            Content = "Відповідь 95",
                            QuestionId = "ba93de1a-3b88-412f-bf99-25f0b05e8fba"
                        },
                        new
                        {
                            Id = "4eacdec9-5069-4327-b0df-10ab492fcf04",
                            Content = "Відповідь 80",
                            QuestionId = "ba93de1a-3b88-412f-bf99-25f0b05e8fba"
                        },
                        new
                        {
                            Id = "e0f0a649-2b53-43f8-8f67-05e8fbe3d86a",
                            Content = "Відповідь 15",
                            QuestionId = "ba93de1a-3b88-412f-bf99-25f0b05e8fba"
                        },
                        new
                        {
                            Id = "9b200205-561f-47a1-89f6-95b905633a32",
                            Content = "Відповідь 44",
                            QuestionId = "a1f50cf9-1d0e-4a8b-aed8-f786fa183871"
                        },
                        new
                        {
                            Id = "322e5ea3-7921-4993-8b1d-0001907e4081",
                            Content = "Відповідь 24",
                            QuestionId = "a1f50cf9-1d0e-4a8b-aed8-f786fa183871"
                        },
                        new
                        {
                            Id = "a7ca61e3-8392-4fc1-bc32-0c2cc85093a9",
                            Content = "Відповідь 42",
                            QuestionId = "a1f50cf9-1d0e-4a8b-aed8-f786fa183871"
                        },
                        new
                        {
                            Id = "5e866ba8-a5a3-4136-b3cc-3e32986ae40e",
                            Content = "Відповідь 10",
                            QuestionId = "a1f50cf9-1d0e-4a8b-aed8-f786fa183871"
                        },
                        new
                        {
                            Id = "e612915f-8375-4810-988f-5f0e10a901af",
                            Content = "Відповідь 16",
                            QuestionId = "622e953a-1706-44cf-b512-00ca87c7054f"
                        },
                        new
                        {
                            Id = "86c0a865-e1f7-47ed-a437-32855dcaaa1c",
                            Content = "Відповідь 40",
                            QuestionId = "622e953a-1706-44cf-b512-00ca87c7054f"
                        },
                        new
                        {
                            Id = "bb3bf8c1-fc6d-4296-8af7-03c14d36bc72",
                            Content = "Відповідь 80",
                            QuestionId = "622e953a-1706-44cf-b512-00ca87c7054f"
                        },
                        new
                        {
                            Id = "4a2a4eb9-df14-4796-a2e0-73eb49e9f516",
                            Content = "Відповідь 53",
                            QuestionId = "622e953a-1706-44cf-b512-00ca87c7054f"
                        },
                        new
                        {
                            Id = "9461a664-3b72-482a-8f99-2918724b04d3",
                            Content = "Відповідь 67",
                            QuestionId = "2e1dd1de-b3b4-4c5b-8c08-d998e0bd742e"
                        },
                        new
                        {
                            Id = "2605f03a-da24-4178-8f8d-bc229ad1a9d9",
                            Content = "Відповідь 54",
                            QuestionId = "2e1dd1de-b3b4-4c5b-8c08-d998e0bd742e"
                        },
                        new
                        {
                            Id = "eab147af-0956-4284-97be-221b23a87da2",
                            Content = "Відповідь 96",
                            QuestionId = "2e1dd1de-b3b4-4c5b-8c08-d998e0bd742e"
                        },
                        new
                        {
                            Id = "a4716804-23f2-4ce6-8b67-b67586c43fef",
                            Content = "Відповідь 96",
                            QuestionId = "2e1dd1de-b3b4-4c5b-8c08-d998e0bd742e"
                        },
                        new
                        {
                            Id = "c8e00b36-4c97-447c-b0e0-6f07e9ba2479",
                            Content = "Відповідь 32",
                            QuestionId = "98363f4e-59fb-4929-b33f-a8b41413a59c"
                        },
                        new
                        {
                            Id = "9c9a6674-6d79-4226-923e-fb31094cada9",
                            Content = "Відповідь 48",
                            QuestionId = "98363f4e-59fb-4929-b33f-a8b41413a59c"
                        },
                        new
                        {
                            Id = "2f1c1f9c-f650-4fab-b732-8818045baadc",
                            Content = "Відповідь 97",
                            QuestionId = "98363f4e-59fb-4929-b33f-a8b41413a59c"
                        },
                        new
                        {
                            Id = "83450f9b-46c7-48f6-84d0-b4fe81393ae4",
                            Content = "Відповідь 87",
                            QuestionId = "98363f4e-59fb-4929-b33f-a8b41413a59c"
                        },
                        new
                        {
                            Id = "83778108-4034-4406-8bff-4123724316b1",
                            Content = "Відповідь 91",
                            QuestionId = "8195b8f6-1ce1-4d5e-990c-d638475906ca"
                        },
                        new
                        {
                            Id = "8c69081d-1374-4e07-b546-f86237671124",
                            Content = "Відповідь 77",
                            QuestionId = "8195b8f6-1ce1-4d5e-990c-d638475906ca"
                        },
                        new
                        {
                            Id = "f1bc7a93-831d-4cce-b8ed-a20d04c38714",
                            Content = "Відповідь 62",
                            QuestionId = "8195b8f6-1ce1-4d5e-990c-d638475906ca"
                        },
                        new
                        {
                            Id = "238a99d6-fb25-45f3-a001-c740bfbb0e88",
                            Content = "Відповідь 16",
                            QuestionId = "8195b8f6-1ce1-4d5e-990c-d638475906ca"
                        },
                        new
                        {
                            Id = "f2cd314c-d253-4ae3-9864-cb672a39fa98",
                            Content = "Відповідь 57",
                            QuestionId = "bf909ffa-8185-4667-8305-106bf0da54a7"
                        },
                        new
                        {
                            Id = "21c2459a-599b-40b3-8c22-4a58a1be6b5f",
                            Content = "Відповідь 41",
                            QuestionId = "bf909ffa-8185-4667-8305-106bf0da54a7"
                        },
                        new
                        {
                            Id = "c4f3d7a1-8ef4-4107-ad88-3c5cad8e5bc3",
                            Content = "Відповідь 8",
                            QuestionId = "bf909ffa-8185-4667-8305-106bf0da54a7"
                        },
                        new
                        {
                            Id = "ff3ac852-71b1-4e98-836a-257795dec411",
                            Content = "Відповідь 60",
                            QuestionId = "bf909ffa-8185-4667-8305-106bf0da54a7"
                        },
                        new
                        {
                            Id = "7fd0e495-9998-4079-846e-0f0dd2a5c4f7",
                            Content = "Відповідь 17",
                            QuestionId = "99e6660f-7cbe-408e-816e-4884e36710a3"
                        },
                        new
                        {
                            Id = "5b949545-9da9-475d-b545-18889e1dd1b1",
                            Content = "Відповідь 64",
                            QuestionId = "99e6660f-7cbe-408e-816e-4884e36710a3"
                        },
                        new
                        {
                            Id = "87fa5bf0-38aa-45e3-a49e-e88df5521cbb",
                            Content = "Відповідь 31",
                            QuestionId = "99e6660f-7cbe-408e-816e-4884e36710a3"
                        },
                        new
                        {
                            Id = "52395681-7ea9-4cc6-b78f-bd180bde6fb8",
                            Content = "Відповідь 98",
                            QuestionId = "99e6660f-7cbe-408e-816e-4884e36710a3"
                        },
                        new
                        {
                            Id = "b0c5dff5-c38e-48c7-96a3-88caecb6dd7d",
                            Content = "Відповідь 68",
                            QuestionId = "b304ceea-354a-48a5-9fd4-cfbaba3ed807"
                        },
                        new
                        {
                            Id = "37e7f517-2f71-46ca-ae7f-d303cff65ce4",
                            Content = "Відповідь 7",
                            QuestionId = "b304ceea-354a-48a5-9fd4-cfbaba3ed807"
                        },
                        new
                        {
                            Id = "5900fb6a-776f-40fa-97bb-c0dcbffe0ec4",
                            Content = "Відповідь 75",
                            QuestionId = "b304ceea-354a-48a5-9fd4-cfbaba3ed807"
                        },
                        new
                        {
                            Id = "a4a1a5be-155a-4998-a9f3-aebbecf0c4f8",
                            Content = "Відповідь 31",
                            QuestionId = "b304ceea-354a-48a5-9fd4-cfbaba3ed807"
                        },
                        new
                        {
                            Id = "1718fb86-f26a-4744-8b64-099db417e536",
                            Content = "Відповідь 3",
                            QuestionId = "acf21d61-127e-43c9-a826-42b3a1f9c27a"
                        },
                        new
                        {
                            Id = "0d21bb3b-a710-4227-afe8-ac7e9ac52b3c",
                            Content = "Відповідь 2",
                            QuestionId = "acf21d61-127e-43c9-a826-42b3a1f9c27a"
                        },
                        new
                        {
                            Id = "393589ff-ff99-4e6f-9c21-5fea3b5e77a5",
                            Content = "Відповідь 4",
                            QuestionId = "acf21d61-127e-43c9-a826-42b3a1f9c27a"
                        },
                        new
                        {
                            Id = "a0345972-9c4a-4712-8584-69a1ac9da4cb",
                            Content = "Відповідь 26",
                            QuestionId = "acf21d61-127e-43c9-a826-42b3a1f9c27a"
                        },
                        new
                        {
                            Id = "fa948e5e-5240-4509-a571-b7a3dc49482a",
                            Content = "Відповідь 98",
                            QuestionId = "3f867ec4-bf5a-4f83-b330-63fc1af3968a"
                        },
                        new
                        {
                            Id = "9f84aa62-2fea-4341-9fa1-5fcf6873c44a",
                            Content = "Відповідь 31",
                            QuestionId = "3f867ec4-bf5a-4f83-b330-63fc1af3968a"
                        },
                        new
                        {
                            Id = "52bf526e-a8db-4018-ab42-0f6b1434ebff",
                            Content = "Відповідь 27",
                            QuestionId = "3f867ec4-bf5a-4f83-b330-63fc1af3968a"
                        },
                        new
                        {
                            Id = "90253d61-c59b-434b-943c-382f0439694d",
                            Content = "Відповідь 65",
                            QuestionId = "3f867ec4-bf5a-4f83-b330-63fc1af3968a"
                        },
                        new
                        {
                            Id = "7a4271d1-db95-40f8-b2b1-d556b3268bbd",
                            Content = "Відповідь 84",
                            QuestionId = "f289bd58-6f6d-4e14-bf6a-098f53828b06"
                        },
                        new
                        {
                            Id = "076e5ae7-314f-4fd4-8ab9-e015f6a4f665",
                            Content = "Відповідь 2",
                            QuestionId = "f289bd58-6f6d-4e14-bf6a-098f53828b06"
                        },
                        new
                        {
                            Id = "631b5ac6-15d6-4d00-9a17-b6fc7e551c1d",
                            Content = "Відповідь 48",
                            QuestionId = "f289bd58-6f6d-4e14-bf6a-098f53828b06"
                        },
                        new
                        {
                            Id = "7d04cca2-4849-4994-bd7d-d2a4fa0f5a5d",
                            Content = "Відповідь 9",
                            QuestionId = "f289bd58-6f6d-4e14-bf6a-098f53828b06"
                        },
                        new
                        {
                            Id = "b3bedc7b-da32-4b48-b415-7dd56810f2a3",
                            Content = "Відповідь 46",
                            QuestionId = "a9a93533-04fe-4393-ab00-b2b38a6fd4c7"
                        },
                        new
                        {
                            Id = "293f2544-0b3b-45a6-86c8-4972a6e888e4",
                            Content = "Відповідь 13",
                            QuestionId = "a9a93533-04fe-4393-ab00-b2b38a6fd4c7"
                        },
                        new
                        {
                            Id = "a2c83c72-8124-46ed-a6de-e7c3727e03fb",
                            Content = "Відповідь 80",
                            QuestionId = "a9a93533-04fe-4393-ab00-b2b38a6fd4c7"
                        },
                        new
                        {
                            Id = "c5da8717-841a-4005-b64b-39dd5a6e7b2b",
                            Content = "Відповідь 63",
                            QuestionId = "a9a93533-04fe-4393-ab00-b2b38a6fd4c7"
                        },
                        new
                        {
                            Id = "25c86609-c5b1-4a05-a27b-bbffe3a6580b",
                            Content = "Відповідь 20",
                            QuestionId = "f510e273-0b21-49a2-913d-f183cabd1ba2"
                        },
                        new
                        {
                            Id = "48b0099f-52aa-40b6-a760-e7bda01c723a",
                            Content = "Відповідь 62",
                            QuestionId = "f510e273-0b21-49a2-913d-f183cabd1ba2"
                        },
                        new
                        {
                            Id = "da3aa296-6bb4-4b73-b5a2-31a52678d398",
                            Content = "Відповідь 25",
                            QuestionId = "f510e273-0b21-49a2-913d-f183cabd1ba2"
                        },
                        new
                        {
                            Id = "83a27d2f-6e1e-4d71-8dc0-fb1fab69770d",
                            Content = "Відповідь 97",
                            QuestionId = "f510e273-0b21-49a2-913d-f183cabd1ba2"
                        });
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("LogoSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logo_src");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0929179e-ae8c-4bfc-826a-57c69b0de18c",
                            LogoSrc = "https://silpo.ua/images/silpo_fb_share.png",
                            Name = "Сільпо"
                        },
                        new
                        {
                            Id = "8f19e9a6-5538-403a-bbfa-9bf4d3d67934",
                            LogoSrc = "https://cdn.metro-online.com/-/media/Project/MCW/RU_Metro/2021/join-us/Metro.png?rev=fe69769d14aa4105bc7e5731e32ebfc7&w=339&hash=783A0BB0789E586BB438C44B0778558A",
                            Name = "Metro"
                        },
                        new
                        {
                            Id = "e1a9cebb-661b-475a-9ae3-323883e497eb",
                            LogoSrc = "https://allretail.ua/static/files/originals/2/85/30b01f786bd9a28d98e745247184f852.svg",
                            Name = "АТБ"
                        });
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Question", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("SurveyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("survey_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_questions");

                    b.HasIndex("SurveyId")
                        .HasDatabaseName("ix_questions_survey_id");

                    b.ToTable("questions", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "44b50da0-1a6d-4df3-8538-0185c2e9e5b8",
                            SurveyId = "53ddc52b-0cfe-4de4-b353-30ff6f0d8133",
                            Title = "Яке пиво ви купуєте найчастіше?"
                        },
                        new
                        {
                            Id = "3037d92a-b64c-4727-bacb-aea136abf8e5",
                            SurveyId = "53ddc52b-0cfe-4de4-b353-30ff6f0d8133",
                            Title = "Чи спробували ви нові сорти пива в нашому магазині?"
                        },
                        new
                        {
                            Id = "ba93de1a-3b88-412f-bf99-25f0b05e8fba",
                            SurveyId = "53ddc52b-0cfe-4de4-b353-30ff6f0d8133",
                            Title = "Які характеристики пива важливі для вас?"
                        },
                        new
                        {
                            Id = "a1f50cf9-1d0e-4a8b-aed8-f786fa183871",
                            SurveyId = "53ddc52b-0cfe-4de4-b353-30ff6f0d8133",
                            Title = "Як часто ви купуєте пиво в наших магазинах?"
                        },
                        new
                        {
                            Id = "622e953a-1706-44cf-b512-00ca87c7054f",
                            SurveyId = "2091f48c-a6a6-4c03-b1cd-75d4488c06aa",
                            Title = "Який продукт ви купуєте найчастіше в Metro?"
                        },
                        new
                        {
                            Id = "2e1dd1de-b3b4-4c5b-8c08-d998e0bd742e",
                            SurveyId = "2091f48c-a6a6-4c03-b1cd-75d4488c06aa",
                            Title = "Чи задоволені ви асортиментом товарів у наших магазинах?"
                        },
                        new
                        {
                            Id = "98363f4e-59fb-4929-b33f-a8b41413a59c",
                            SurveyId = "2091f48c-a6a6-4c03-b1cd-75d4488c06aa",
                            Title = "Які характеристики товарів важливі для вас при покупці?"
                        },
                        new
                        {
                            Id = "8195b8f6-1ce1-4d5e-990c-d638475906ca",
                            SurveyId = "2091f48c-a6a6-4c03-b1cd-75d4488c06aa",
                            Title = "Як часто ви відвідуєте наші магазини?"
                        },
                        new
                        {
                            Id = "bf909ffa-8185-4667-8305-106bf0da54a7",
                            SurveyId = "b66d55d6-61d9-403b-b22f-0cab26599468",
                            Title = "Як часто ви здійснюєте покупки в АТБ?"
                        },
                        new
                        {
                            Id = "99e6660f-7cbe-408e-816e-4884e36710a3",
                            SurveyId = "b66d55d6-61d9-403b-b22f-0cab26599468",
                            Title = "Які товари ви найчастіше купуєте в наших магазинах?"
                        },
                        new
                        {
                            Id = "b304ceea-354a-48a5-9fd4-cfbaba3ed807",
                            SurveyId = "b66d55d6-61d9-403b-b22f-0cab26599468",
                            Title = "Чи задоволені ви якістю обслуговування у наших магазинах?"
                        },
                        new
                        {
                            Id = "acf21d61-127e-43c9-a826-42b3a1f9c27a",
                            SurveyId = "b66d55d6-61d9-403b-b22f-0cab26599468",
                            Title = "Чи вважаєте ви наші ціни конкурентоспроможними?"
                        },
                        new
                        {
                            Id = "3f867ec4-bf5a-4f83-b330-63fc1af3968a",
                            SurveyId = "273f4d05-315b-48e5-8938-4746bab72b5c",
                            Title = "Як ви оцінюєте чистоту наших магазинів?"
                        },
                        new
                        {
                            Id = "f289bd58-6f6d-4e14-bf6a-098f53828b06",
                            SurveyId = "273f4d05-315b-48e5-8938-4746bab72b5c",
                            Title = "Чи допомагає вам персонал з пошуком товарів?"
                        },
                        new
                        {
                            Id = "a9a93533-04fe-4393-ab00-b2b38a6fd4c7",
                            SurveyId = "273f4d05-315b-48e5-8938-4746bab72b5c",
                            Title = "Чи вважаєте ви, що у нас завжди є необхідні товари?"
                        },
                        new
                        {
                            Id = "f510e273-0b21-49a2-913d-f183cabd1ba2",
                            SurveyId = "273f4d05-315b-48e5-8938-4746bab72b5c",
                            Title = "Чи радите ви своїм знайомим відвідувати магазини АТБ?"
                        });
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Respondent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_respondents");

                    b.ToTable("respondents", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentReward", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("RespondentId")
                        .IsRequired()
                        .HasColumnType("character varying(36)")
                        .HasColumnName("respondent_id");

                    b.Property<string>("RewardId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reward_id");

                    b.HasKey("Id")
                        .HasName("pk_respondent_rewards");

                    b.HasIndex("RespondentId")
                        .HasDatabaseName("ix_respondent_rewards_respondent_id");

                    b.ToTable("respondent_rewards", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completion_date");

                    b.Property<string>("RespondentId")
                        .IsRequired()
                        .HasColumnType("character varying(36)")
                        .HasColumnName("respondent_id");

                    b.Property<string>("SurveyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("survey_id");

                    b.HasKey("Id")
                        .HasName("pk_respondent_surveys");

                    b.HasIndex("RespondentId")
                        .HasDatabaseName("ix_respondent_surveys_respondent_id");

                    b.HasIndex("SurveyId")
                        .HasDatabaseName("ix_respondent_surveys_survey_id");

                    b.ToTable("respondent_surveys", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurveyAnswer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("AnswerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("answer_id");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("question_id");

                    b.Property<string>("RespondentSurveyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("respondent_survey_id");

                    b.HasKey("Id")
                        .HasName("pk_respondent_survey_answers");

                    b.HasIndex("AnswerId")
                        .HasDatabaseName("ix_respondent_survey_answers_answer_id");

                    b.HasIndex("QuestionId")
                        .HasDatabaseName("ix_respondent_survey_answers_question_id");

                    b.HasIndex("RespondentSurveyId")
                        .HasDatabaseName("ix_respondent_survey_answers_respondent_survey_id");

                    b.ToTable("respondent_survey_answers", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Reward", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.HasKey("Id")
                        .HasName("pk_rewards");

                    b.ToTable("rewards", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "053330d5-6641-4006-acf8-7d9b11fa1fa7",
                            Content = "Промокод -50% на чернігівське титан zxcqw-e13371000-7wwww"
                        },
                        new
                        {
                            Id = "5558e8e0-7736-4a40-9153-b6b6ba2c6679",
                            Content = "+100 грн"
                        },
                        new
                        {
                            Id = "3fbc03c5-da3d-4326-89c9-4a21f601c19d",
                            Content = "Знижка 10% на наступну покупку"
                        },
                        new
                        {
                            Id = "2e284ad6-3824-42b7-904b-37a1a5db9991",
                            Content = "Безкоштовна доставка при наступному замовленні"
                        });
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("RewardId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reward_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_surveys");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_surveys_company_id");

                    b.HasIndex("RewardId")
                        .HasDatabaseName("ix_surveys_reward_id");

                    b.ToTable("surveys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "53ddc52b-0cfe-4de4-b353-30ff6f0d8133",
                            CompanyId = "0929179e-ae8c-4bfc-826a-57c69b0de18c",
                            Description = "Опитування про ваші уподобання щодо пива",
                            RewardId = "053330d5-6641-4006-acf8-7d9b11fa1fa7",
                            Title = "Споживання пива"
                        },
                        new
                        {
                            Id = "2091f48c-a6a6-4c03-b1cd-75d4488c06aa",
                            CompanyId = "8f19e9a6-5538-403a-bbfa-9bf4d3d67934",
                            Description = "Допоможіть нам визначити найпопулярніший продукт в Metro",
                            RewardId = "5558e8e0-7736-4a40-9153-b6b6ba2c6679",
                            Title = "Найкращий продукт"
                        },
                        new
                        {
                            Id = "b66d55d6-61d9-403b-b22f-0cab26599468",
                            CompanyId = "e1a9cebb-661b-475a-9ae3-323883e497eb",
                            Description = "Щоб покращити обслуговування, просимо вас взяти участь в нашому опитуванні",
                            RewardId = "3fbc03c5-da3d-4326-89c9-4a21f601c19d",
                            Title = "Ваші покупки в АТБ"
                        },
                        new
                        {
                            Id = "273f4d05-315b-48e5-8938-4746bab72b5c",
                            CompanyId = "e1a9cebb-661b-475a-9ae3-323883e497eb",
                            Description = "Оцініть якість обслуговування в наших магазинах",
                            RewardId = "3fbc03c5-da3d-4326-89c9-4a21f601c19d",
                            Title = "Якість обслуговування"
                        });
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Answer", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_answers_questions_question_id");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Question", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Survey", "Survey")
                        .WithMany("Questions")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_questions_surveys_survey_id");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentReward", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Respondent", null)
                        .WithMany("Rewards")
                        .HasForeignKey("RespondentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_rewards_respondents_respondent_id");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Respondent", "Respondent")
                        .WithMany("CompletedSurveys")
                        .HasForeignKey("RespondentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_surveys_respondents_respondent_id");

                    b.HasOne("opytuvannia_backend.Entities.Survey", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_surveys_surveys_survey_id");

                    b.Navigation("Respondent");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurveyAnswer", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_survey_answers_answers_answer_id");

                    b.HasOne("opytuvannia_backend.Entities.Question", "Question")
                        .WithMany()
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_survey_answers_questions_question_id");

                    b.HasOne("opytuvannia_backend.Entities.RespondentSurvey", "RespondentSurvey")
                        .WithMany("Answers")
                        .HasForeignKey("RespondentSurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_survey_answers_respondent_surveys_respondent_sur");

                    b.Navigation("Answer");

                    b.Navigation("Question");

                    b.Navigation("RespondentSurvey");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_surveys_companies_company_id");

                    b.HasOne("opytuvannia_backend.Entities.Reward", "Reward")
                        .WithMany()
                        .HasForeignKey("RewardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_surveys_rewards_reward_id");

                    b.Navigation("Company");

                    b.Navigation("Reward");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Respondent", b =>
                {
                    b.Navigation("CompletedSurveys");

                    b.Navigation("Rewards");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
