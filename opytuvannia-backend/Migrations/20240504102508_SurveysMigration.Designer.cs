// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using opytuvannia_backend.Database;

#nullable disable

namespace opytuvannia_backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240504102508_SurveysMigration")]
    partial class SurveysMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("opytuvannia_backend.Entities.Answer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("SurveyTaskId")
                        .HasColumnType("text")
                        .HasColumnName("survey_task_id");

                    b.HasKey("Id")
                        .HasName("pk_answers");

                    b.HasIndex("SurveyTaskId")
                        .HasDatabaseName("ix_answers_survey_task_id");

                    b.ToTable("answers", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Company", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("LogoSrc")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("logo_src");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_companies");

                    b.ToTable("companies", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Respondent", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(36)
                        .HasColumnType("character varying(36)")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("birth_date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(320)
                        .HasColumnType("character varying(320)")
                        .HasColumnName("email");

                    b.Property<string>("Gender")
                        .HasColumnType("character varying(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("password");

                    b.HasKey("Id")
                        .HasName("pk_respondents");

                    b.ToTable("respondents", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CompletionDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("completion_date");

                    b.Property<string>("RespondentId")
                        .IsRequired()
                        .HasColumnType("character varying(36)")
                        .HasColumnName("respondent_id");

                    b.Property<string>("SurveyId")
                        .HasColumnType("text")
                        .HasColumnName("survey_id");

                    b.HasKey("Id")
                        .HasName("pk_respondent_surveys");

                    b.HasIndex("RespondentId")
                        .HasDatabaseName("ix_respondent_surveys_respondent_id");

                    b.HasIndex("SurveyId")
                        .HasDatabaseName("ix_respondent_surveys_survey_id");

                    b.ToTable("respondent_surveys", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurveyAnswer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("AnswerId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("answer_id");

                    b.Property<string>("RespondentSurveyId")
                        .HasColumnType("text")
                        .HasColumnName("respondent_survey_id");

                    b.Property<string>("SurveyTaskId")
                        .HasColumnType("text")
                        .HasColumnName("survey_task_id");

                    b.HasKey("Id")
                        .HasName("pk_respondent_survey_answers");

                    b.HasIndex("AnswerId")
                        .HasDatabaseName("ix_respondent_survey_answers_answer_id");

                    b.HasIndex("RespondentSurveyId")
                        .HasDatabaseName("ix_respondent_survey_answers_respondent_survey_id");

                    b.HasIndex("SurveyTaskId")
                        .HasDatabaseName("ix_respondent_survey_answers_survey_task_id");

                    b.ToTable("respondent_survey_answers", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Reward")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("reward");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_surveys");

                    b.HasIndex("CompanyId")
                        .HasDatabaseName("ix_surveys_company_id");

                    b.ToTable("surveys", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.SurveyTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("SurveyId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("survey_id");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_tasks");

                    b.HasIndex("SurveyId")
                        .HasDatabaseName("ix_tasks_survey_id");

                    b.ToTable("tasks", (string)null);
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Answer", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.SurveyTask", "SurveyTask")
                        .WithMany("Answers")
                        .HasForeignKey("SurveyTaskId")
                        .HasConstraintName("fk_answers_tasks_survey_task_id");

                    b.Navigation("SurveyTask");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Respondent", "Respondent")
                        .WithMany("CompletedSurveys")
                        .HasForeignKey("RespondentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_surveys_respondents_respondent_id");

                    b.HasOne("opytuvannia_backend.Entities.Survey", "Survey")
                        .WithMany()
                        .HasForeignKey("SurveyId")
                        .HasConstraintName("fk_respondent_surveys_surveys_survey_id");

                    b.Navigation("Respondent");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurveyAnswer", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Answer", "Answer")
                        .WithMany()
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_respondent_survey_answers_answers_answer_id");

                    b.HasOne("opytuvannia_backend.Entities.RespondentSurvey", "RespondentSurvey")
                        .WithMany("Answers")
                        .HasForeignKey("RespondentSurveyId")
                        .HasConstraintName("fk_respondent_survey_answers_respondent_surveys_respondent_sur");

                    b.HasOne("opytuvannia_backend.Entities.SurveyTask", "SurveyTask")
                        .WithMany()
                        .HasForeignKey("SurveyTaskId")
                        .HasConstraintName("fk_respondent_survey_answers_tasks_survey_task_id");

                    b.Navigation("Answer");

                    b.Navigation("RespondentSurvey");

                    b.Navigation("SurveyTask");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_surveys_companies_company_id");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.SurveyTask", b =>
                {
                    b.HasOne("opytuvannia_backend.Entities.Survey", "Survey")
                        .WithMany("Tasks")
                        .HasForeignKey("SurveyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_tasks_surveys_survey_id");

                    b.Navigation("Survey");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Respondent", b =>
                {
                    b.Navigation("CompletedSurveys");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.RespondentSurvey", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.Survey", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("opytuvannia_backend.Entities.SurveyTask", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
